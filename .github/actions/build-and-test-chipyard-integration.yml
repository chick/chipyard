name: chipyard-ci-process

on: [push]

env:
  tools-cache-version: v6
  docker-image-id: ucbbar/chipyard-ci-image:1d51bb90
  JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit

jobs:

  commit-on-master-check:
    name: commit-on-master-check
    runs-on: ubuntu-latest
    container:
      image: ucbbar/chipyard-ci-image:1d51bb90
      options: --entrypoint /bin/bash
    steps:
      - includes: ./.github/actions/includes/startup
      - name: Check commits of each submodle
        run: |
          .github/scripts/check-commit.sh
          echo "riscv-tools.hash" && cat riscv-tools.hash
          echo "esp-tools.hash" && cat esp-tools.hash

  tutorial-setup-check:
    name: tutorial-setup-check
    runs-on: ubuntu-latest
    container:
      image: ucbbar/chipyard-ci-image:1d51bb90
      options: --entrypoint /bin/bash

    steps:
      - includes: ./.github/actions/includes/startup
      - name: Check that the tutorial-setup patches apply
        run: scripts/tutorial-setup.sh

  documentation-check:
    name: documentation-check
    runs-on: ubuntu-latest
    container:
      image: ucbbar/chipyard-ci-image:1d51bb90
      options: --entrypoint /bin/bash

    steps:
      - includes: ./.github/actions/includes/startup
      - name: Check that documentation builds with no warnings/errors
        run: |
          sudo apt-get update -y
          sudo apt-get install -y python3-pip
          sudo pip3 install -r docs/requirements.txt
          make -C docs html
      - name: Show error log from sphinx if failed
        if: ${{ failure() }}
        run: cat /tmp/sphinx-err*.log

  install-riscv-toolchain:
    name: install riscv toolchain
    runs-on: ubuntu-latest
    container:
      image: ucbbar/chipyard-ci-image:1d51bb90
      options: --entrypoint /bin/bash

    steps:
      - includes: ./.github/actions/includes/startup
      - includes: ./.github/actions/includes/build-riscv-toolchain

  install-esp-toolchain:
    name: install esp toolchain
    runs-on: ubuntu-latest
    container:
      image: ucbbar/chipyard-ci-image:1d51bb90
      options: --entrypoint /bin/bash

    steps:
      - includes: ./.github/actions/includes/startup
      - includes: ./.github/actions/includes/build-esp-toolchain

  build-extra-tests:
    name: build extra tests
    needs: install-riscv-toolchain
    runs-on: ubuntu-latest
    container:
      image: ucbbar/chipyard-ci-image:1d51bb90
      options: --entrypoint /bin/bash

    steps:
      - includes: ./.github/actions/includes/startup
      - includes: ./.github/actions/includes/build-riscv-toolchain
      - includes: ./.github/actions/includes/build-extra-tests

  install-verilator:
    name: install verilator
    runs-on: ubuntu-latest
    container:
      image: ucbbar/chipyard-ci-image:1d51bb90
      options: --entrypoint /bin/bash
    env:
      BUILDSERVER: ${{ secrets.BUILDSERVER }}
      BUILDUSER: ${{ secrets.BUILDUSER }}
      SERVER: ${{ secrets.BUILDUSER }}@${{ secrets.BUILDSERVER }}
      JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
    steps:
      - includes: ./.github/actions/includes/startup
      - name: show remote
        run: echo remote server is ${{ secrets.BERKELEYSERVER }}
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SERVERKEY }}
          known_hosts: ${{ secrets.BUILDSERVER }}
      - name: build verilator on remote
        run: .github/scripts/install-verilator.sh


  # Sentinel job to simplify how we specify which that basic setup is complete
  #
  # When adding new jobs, please add them to `needs` below
  setup-complete:
    name: "setup complete"
    needs: [commit-on-master-check, tutorial-setup-check, documentation-check,
            install-riscv-toolchain, install-esp-toolchain, install-verilator,
            build-extra-tests]
    runs-on: ubuntu-latest
    steps:
      - run: echo Set up complete!


  prepare-chipyard-cores:
    name: prepare chipyard cores
    needs: setup-complete
    runs-on: ubuntu-latest
    container:
      image: ucbbar/chipyard-ci-image:1d51bb90
      options: --entrypoint /bin/bash

    steps:
      - includes: ./.github/actions/includes/startup